###############################################################
# BASICS
################################################################
xset r rate 222 85
setxkbmap -option caps:swapescape
xmodmap $HOME/.Xmodmap
# PS1="[%{%F{blue]%}%b%20<...<%~%<<%F{white}]%(!.#.$) "
PS1="[%{%F{blue]%b%F{white}]%(!.#.$) "
export PS1="[%F{blue}%}%3~%{%f%}]$ "

###############################################################
# ALIASES
################################################################
alias ..="cd .."
alias ...="cd ../.."

alias c="clear"
alias q="exit"
alias t="kitty &"
alias ka="killall"

alias ls="ls --color=always --group-directories-first"
alias sl="ls --color=always --group-directories-first"
alias ll="ls -l --color=always --group-directories-first"
alias la="ls -a --color=always --group-directories-first"
alias lla='ls -lah --color=auto --group-directories-first'
alias grep="grep --color"

alias install="sudo apt install"
alias update="sudo aptitude update; sudo aptitude update"
alias p="sudo pacman"
alias up="sudo pacman -Syu"
alias orphans="pacman -Qdtq"
alias installed="pacman -Qi | egrep '^(Name|Installed)' | cut -f2 -d':' | paste - - | column -t | sort -nrk 2 | grep MiB | less "

alias h="htop"
alias f="firefox"
alias r="lf"
alias sr="sudo . lf"
alias m="mupdf"
alias vim="nvim"
alias v="nvim"

alias rice="cd ~/Sync/Rice"
# alias neofetch="uwufetch"

alias bss="nvim ~/Sync/Rice/zsh/zshrc"
alias bs="nvim ~/Sync/Rice/_private/linux-aliasrc"
alias 30min="sudo shutdown -P 30"
alias 45min="sudo shutdown -P 45"

alias wttr="curl wttr.in"

alias ec="nvim ~/.zshrc"
alias sc="source ~/.zshrc"

###############################################################
# PLUGINS
################################################################
autoload -Uz promptinit, promptinit
autoload -U compinit; compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

setopt histignorealldups sharehistory

HISTSIZE=5000
SAVEHIST=5000
HISTFILE=~/.zsh_history

# Use modern completion system
# autoload -Uz compinit
# compinit


# zplug - manage plugins
source /usr/share/zplug/init.zsh
# zplug "plugins/git", from:oh-my-zsh
# zplug "plugins/sudo", from:oh-my-zsh
# zplug "plugins/command-not-found", from:oh-my-zsh
zplug "zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-autosuggestions"
# zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-completions"
zplug "junegunn/fzf"

# zplug - install/load new plugins when zsh is started or reloaded
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# zplug load --verbose
zplug load


###############################################################
# LF working directory and image preview (by ueberzug)
###############################################################
lf () {
    tmp="$(mktemp)"
    command ~/.config/lf/lfrun -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        if [ -d "$dir" ]; then
            if [ "$dir" != "$(pwd)" ]; then
                cd "$dir"
            fi
        fi
    fi
}
function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

################################################################
# CONDA
################################################################
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
# source ~/miniconda3/bin/activate
# __conda_setup="$('~/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "~/miniconda3/etc/profile.d/conda.sh" ]; then
#         . "~/miniconda3/etc/profile.d/conda.sh"
#     else
#         export PATH="~/miniconda3/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# <<< conda initialize <<<
#
# # Tensorflow
# export TF_CPP_MIN_LOG_LEVEL=3

echo ""
~/Sync/Rice/scripts/bunny
echo ""
# zprof

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

bindkey -e
